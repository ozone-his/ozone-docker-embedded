networks:
  ozone:
  web:
    external: true

x-erpnext-image: &erpnext-image
  image: frappe/erpnext:v15.12.2
  platform: linux/amd64

x-redis-image: &redis-image
  image: redis:6.2-alpine

x-ozone-networks: &ozone-networks
  networks:
    - ozone
    - web

x-erpnext-volumes: &erpnext-volumes
  volumes:
    - erpnext-sites:/home/frappe/frappe-bench/sites
    - erpnext-logs:/home/frappe/frappe-bench/logs

services:

  env-substitution:
    image: mekomsolutions/env-substitution
    networks:
      - ozone
    environment:
      - ODOO_PUBLIC_URL=https://\${ODOO_HOSTNAME}
      - OPENMRS_PUBLIC_URL=https://\${O3_HOSTNAME}
      - SENAITE_PUBLIC_URL=https://\${SENAITE_HOSTNAME}
    restart: on-failure
    volumes:
       - "\${DISTRO_PATH}:/opt/env-substitution/files"

  mysql:
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
      - --skip-innodb-read-only-compressed
      - --log-bin=mysqld-bin
      - --binlog-format=ROW
      - --server-id=2
      - --sync-binlog=1
      - --binlog-annotate-row-events=0
    environment:
      MYSQL_ROOT_PASSWORD: "\${MYSQL_ROOT_PASSWORD}"
      EIP_DB_NAME_ERPNEXT: \${EIP_DB_NAME_ERPNEXT}
      EIP_DB_USER_ERPNEXT: \${EIP_DB_USER_ERPNEXT}
      EIP_DB_PASSWORD_ERPNEXT: \${EIP_DB_PASSWORD_ERPNEXT}
      EIP_DB_NAME_ODOO: \${EIP_DB_NAME_ODOO}
      EIP_DB_USER_ODOO: \${EIP_DB_USER_ODOO}
      EIP_DB_PASSWORD_ODOO: \${EIP_DB_PASSWORD_ODOO}
      OPENMRS_DB_NAME: \${OPENMRS_DB_NAME}
      OPENMRS_DB_USER: \${OPENMRS_DB_USER}
      OPENMRS_DB_PASSWORD: \${OPENMRS_DB_PASSWORD}
      EIP_DB_NAME_SENAITE: \${EIP_DB_NAME_SENAITE}
      EIP_DB_USER_SENAITE: \${EIP_DB_USER_SENAITE}
      EIP_DB_PASSWORD_SENAITE: \${EIP_DB_PASSWORD_SENAITE}
    healthcheck:
      test: "exit 0"
    image: mariadb:10.8
    networks:
      - ozone
    ports:
      - "3306:3306"
    restart: unless-stopped
    volumes:
      - "\${MYSQL_DATADIR:-mysql-data}:/var/lib/mysql"
      - "\${SQL_SCRIPTS_PATH}/mysql/create_db.sh:/docker-entrypoint-initdb.d/create_db.sh"
      - "\${SQL_SCRIPTS_PATH}/mysql/eip-erpnext-openmrs:/docker-entrypoint-initdb.d/db/eip-erpnext-openmrs"
      - "\${SQL_SCRIPTS_PATH}/mysql/eip-odoo-openmrs:/docker-entrypoint-initdb.d/db/eip-odoo-openmrs"
      - "\${SQL_SCRIPTS_PATH}/mysql/openmrs:/docker-entrypoint-initdb.d/db/openmrs"
      - "\${SQL_SCRIPTS_PATH}/mysql/eip-openmrs-senaite:/docker-entrypoint-initdb.d/db/eip-openmrs-senaite"
      
  postgresql:
    command: "postgres -c wal_level=logical -c max_wal_senders=10 -c max_replication_slots=10"
    image: postgres:13
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: \${POSTGRES_USER}
      POSTGRES_PASSWORD: \${POSTGRES_PASSWORD}
      ODOO_DB_NAME: \${ODOO_DATABASE}
      ODOO_DB_USER: \${ODOO_DB_USER}
      ODOO_DB_PASSWORD: \${ODOO_DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - ozone
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - "\${POSTGRES_DATADIR:-postgresql-data}:/var/lib/postgresql/data"
      - "\${SQL_SCRIPTS_PATH}/postgresql/create_db.sh:/docker-entrypoint-initdb.d/create_db.sh"
      - "\${SQL_SCRIPTS_PATH}/postgresql/odoo:/docker-entrypoint-initdb.d/db/odoo"
  erpnext-backend:
    <<: [ *erpnext-image, *erpnext-volumes, *ozone-networks ]
    restart: unless-stopped

  erpnext-configurator:
    <<: [ *erpnext-image, *erpnext-volumes, *ozone-networks ]
    command:
      - >
        ls -1 apps > sites/apps.txt;
        bench set-config -g db_host \$\$DB_HOST;
        bench set-config -gp db_port \$\$DB_PORT;
        bench set-config -g redis_cache "redis://\$\$REDIS_CACHE";
        bench set-config -g redis_queue "redis://\$\$REDIS_QUEUE";
        bench set-config -g redis_socketio "redis://\$\$REDIS_QUEUE";
        bench set-config -gp socketio_port \$\$SOCKETIO_PORT;
    entrypoint:
      - bash
      - -c
    environment:
      DB_HOST: mysql
      DB_PORT: "3306"
      REDIS_CACHE: erpnext-redis-cache:6379
      REDIS_QUEUE: erpnext-redis-queue:6379
      SOCKETIO_PORT: "9000"

  erpnext-init:
    <<: [ *erpnext-image, *ozone-networks ]
    command:
      - >
        wait-for-it -t 120 mysql:3306;
        wait-for-it -t 120 erpnext-redis-cache:6379;
        wait-for-it -t 120 erpnext-redis-queue:6379;
        export start=`date +%s`;
        until [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".db_host // empty"` ]] && \
          [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".redis_cache // empty"` ]] && \
          [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".redis_queue // empty"` ]];
        do
          echo "Waiting for sites/common_site_config.json to be created";
          sleep 5;
          if (( `date +%s`-start > 120 )); then
            echo "could not find sites/common_site_config.json with required keys";
            exit 1
          fi
        done;
        echo "sites/common_site_config.json found";
        echo "Creating new site";
        bench new-site --no-mariadb-socket --admin-password=\$\$ERPNEXT_ADMIN_PASSWORD --db-root-password=\$\$MYSQL_ADMIN_PASSWORD --db-name=\$\$ERPNEXT_DB_NAME --source_sql=/opt/erpnext/configs/sql/erpnext-v15.12.2-init-db.sql --install-app erpnext --set-default ozone-erpnext;
        echo "==============================================================";
        export startTime=`date +%s`;
        until [[ -f sites/ozone-erpnext/site_config.json ]];
        do
          echo "Waiting for sites/ozone-erpnext/site_config.json to be created";
          sleep 5;
          if (( `date +%s`-startTime > 480 )); then
            echo "could not find sites/ozone-erpnext/site_config.json";
            exit 1
          fi
        done;
        echo "Site fully initialized";
        echo "Running data-import.sh script to import data into the new site";
        source /opt/erpnext/scripts/data-import.sh;
        echo "==============================================================";

    depends_on:
      erpnext-configurator:
        condition: service_completed_successfully
      mysql:
        condition: service_started
      erpnext-redis-cache:
        condition: service_started
      erpnext-redis-queue:
        condition: service_started
    entrypoint:
      - bash
      - -c
    environment:
      ERPNEXT_ADMIN_PASSWORD: \${ERPNEXT_PASSWORD}
      MYSQL_ADMIN_PASSWORD: \${MYSQL_ROOT_PASSWORD}
      ERPNEXT_DB_NAME: \${ERPNEXT_DB_NAME}
    volumes:
      - erpnext-sites:/home/frappe/frappe-bench/sites
      - erpnext-logs:/home/frappe/frappe-bench/logs
      - "\${ERPNEXT_CONFIG_PATH}:/opt/erpnext/configs"
      - "\${ERPNEXT_SCRIPTS_PATH}:/opt/erpnext/scripts"

  erpnext:
    <<: [ *erpnext-image, *erpnext-volumes, *ozone-networks ]
    command:
      - nginx-entrypoint.sh
    depends_on:
      erpnext-websocket:
        condition: service_started
      erpnext-init:
        condition: service_completed_successfully
      mysql:
        condition: service_started
      env-substitution:
        condition: service_completed_successfully
    restart: on-failure
    environment:
      BACKEND: erpnext-backend:8000
      FRAPPE_SITE_NAME_HEADER: ozone-erpnext
      SOCKETIO: erpnext-websocket:9000
      UPSTREAM_REAL_IP_ADDRESS: 127.0.0.1
      UPSTREAM_REAL_IP_HEADER: X-Forwarded-For
      UPSTREAM_REAL_IP_RECURSIVE: "off"
      PROXY_READ_TIMEOUT: 120
      CLIENT_MAX_BODY_SIZE: 50m
    labels:
      traefik.enable: "true"
      traefik.http.routers.erpnext.rule: "Host(`\${ERPNEXT_HOSTNAME}`)"
      traefik.http.routers.erpnext.entrypoints: "websecure"
      traefik.http.services.erpnext.loadbalancer.server.port: 8080

  erpnext-queue-long:
    <<: [ *erpnext-image, *erpnext-volumes, *ozone-networks ]
    command:
      - bench
      - worker
      - --queue
      - long,default,short
    restart: on-failure

  erpnext-queue-short:
    <<: [ *erpnext-image, *erpnext-volumes, *ozone-networks ]
    command:
      - bench
      - worker
      - --queue
      - short,default
    restart: on-failure

  erpnext-redis-queue:
    <<: [ *redis-image, *ozone-networks ]
    restart: on-failure
    volumes:
      - erpnext-redis-queue-data:/data

  erpnext-redis-cache:
    <<: [ *redis-image, *ozone-networks ]
    restart: on-failure
    volumes:
      - erpnext-redis-cache-data:/data

  erpnext-scheduler:
    <<: [ *erpnext-image, *erpnext-volumes, *ozone-networks ]
    command:
      - bench
      - schedule
    restart: on-failure

  erpnext-websocket:
    <<: [ *erpnext-image, *erpnext-volumes, *ozone-networks ]
    command:
      - node
      - /home/frappe/frappe-bench/apps/frappe/socketio.js
    restart: on-failure

  eip-erpnext-openmrs:
    <<: [ *ozone-networks ]
    depends_on:
      env-substitution:
        condition: service_completed_successfully
      openmrs:
        condition: service_healthy
      mysql:
        condition: service_started
      erpnext:
        condition: service_started
    environment:
      - ERPNEXT_SERVER_URL=http://erpnext:8080/api
      - ERPNEXT_USERNAME=\${ERPNEXT_USER}
      - ERPNEXT_PASSWORD=\${ERPNEXT_PASSWORD}
      - ERPNEXT_OPENMRS_ENABLE_PATIENT_SYNC=false
      - EIP_DB_NAME_ERPNEXT=\${EIP_DB_NAME_ERPNEXT}
      - EIP_DB_USER_ERPNEXT=\${EIP_DB_USER_ERPNEXT}
      - EIP_DB_PASSWORD_ERPNEXT=\${EIP_DB_PASSWORD_ERPNEXT}
      - EIP_PROFILE=prod
      - MYSQL_ADMIN_USER=root
      - MYSQL_ADMIN_USER_PASSWORD=\${MYSQL_ROOT_PASSWORD}
      - OPENMRS_DB_HOST=\${OPENMRS_DB_HOST}
      - OPENMRS_DB_PORT=\${OPENMRS_DB_PORT}
      - OPENMRS_DB_NAME=\${OPENMRS_DB_NAME}
      - OPENMRS_DB_USER=\${OPENMRS_DB_USER}
      - OPENMRS_DB_PASSWORD=\${OPENMRS_DB_PASSWORD}
      - EIP_FHIR_RESOURCES=Patient,ServiceRequest,MedicationRequest,Encounter
      - EIP_FHIR_SERVER_URL=http://openmrs:8080/openmrs/ws/fhir2/R4
      - EIP_FHIR_USERNAME=\${OPENMRS_USER}
      - EIP_FHIR_PASSWORD=\${OPENMRS_PASSWORD}
    image: mekomsolutions/${dockerreponame}-eip-client
    networks:
      ozone:
        aliases:
          - eip-client-erpnext
          - eip-erpnext-openmrs
    restart: unless-stopped
    volumes:
      - "\${EIP_ERPNEXT_OPENMRS_ROUTES_PATH}:/eip-client/routes"
      - eip-home-erpnext:/eip-home
  # Odoo
  odoo:
    depends_on:
      postgresql:
        condition: service_healthy
    environment:
      - HOST=\${POSTGRES_DB_HOST}
      - USER=\${ODOO_DB_USER}
      - PASSWORD=\${ODOO_DB_PASSWORD}
      - ADDONS=sale_management,stock,account_account,purchase,mrp,odoo_initializer,ozone_settings,mrp_product_expiry,product_expiry,l10n_generic_coa
      - INITIALIZER_DATA_FILES_PATH=/mnt/odoo_config
      - INITIALIZER_CONFIG_FILE_PATH=/mnt/odoo_config/initializer_config.json
    image: mekomsolutions/mekomsolutions/${dockerreponame}-odoo
    labels:
      traefik.enable: true
      # https
      traefik.http.routers.odoo-https.rule: Host(`\${ODOO_HOSTNAME}`)
      traefik.http.routers.odoo-https.entrypoints: websecure
      traefik.http.routers.odoo-https.service: odoo
      traefik.http.routers.odoo-https.middlewares: gzip,sslheader,limit
      #----------------------------- routes for: odoo/web/database || odoo/website/info  -----------------------------
      # https 
      traefik.http.routers.odoo-db-https.rule: Host(`\${ODOO_HOSTNAME}`) && (PathPrefix(`/web/database`) || PathPrefix(`/website/info`))
      traefik.http.routers.odoo-db-https.entrypoints: websecure
      traefik.http.routers.odoo-db-https.service: odoo
      traefik.http.routers.odoo-db-https.middlewares: gzip,sslheader,limit
      traefik.http.services.odoo-db-https.loadbalancer.server.port: 8069
      #---------------------------------------- routes for: odoo/longpolling ------------------------------------------------
      # https 
      traefik.http.routers.odoo-im-https.rule: Host(`\${ODOO_HOSTNAME}`) && (PathPrefix(`/longpolling`))
      traefik.http.routers.odoo-im-https.entrypoints: websecure
      traefik.http.routers.odoo-im-https.service: odoo-im
      traefik.http.routers.odoo-im-https.middlewares: gzip,sslheader,limit

      #====================================================== services ===========================================================
      traefik.http.services.odoo.loadbalancer.server.port: 8069
      traefik.http.services.odoo-im.loadbalancer.server.port: 8072

      #===================================================== middlewares =========================================================
      traefik.http.middlewares.gzip.compress: true
      traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto: https
      traefik.http.middlewares.limit.buffering.memRequestBodyBytes: 20971520
      traefik.http.middlewares.limit.buffering.maxRequestBodyBytes: 20971520
    networks:
      - ozone
      - web
    restart: unless-stopped
    volumes:
      - "\${ODOO_FILESTORE:-odoo-filestore}:/var/lib/odoo/filestore"
      - "\${ODOO_EXTRA_ADDONS:-odoo-extra-addons}:/mnt/extra-addons"
      - "\${ODOO_CONFIG_PATH:-odoo-config}:/mnt/odoo_config"
      - "\${ODOO_CONFIG_FILE_PATH:-odoo-config}:/etc/properties/odoo.conf"
      - "\${ODOO_CONFIG_CHECKSUMS_PATH:-odoo-checksums}:/mnt/checksums"
    
  # Odoo - OpenMRS integration service
  eip-odoo-openmrs:
    depends_on:
      env-substitution:
        condition: service_completed_successfully
      openmrs:
        condition: service_healthy
      mysql:
        condition: service_started
      odoo:
        condition: service_started
    environment:
      - DB_EVENT_DESTINATIONS_ODOO=\${DB_EVENT_DESTINATIONS_ODOO}
      - EIP_DB_NAME_ODOO=\${EIP_DB_NAME_ODOO}
      - EIP_DB_USER_ODOO=\${EIP_DB_USER_ODOO}
      - EIP_DB_PASSWORD_ODOO=\${EIP_DB_PASSWORD_ODOO}
      - ODOO_DATABASE=\${ODOO_DATABASE}
      - ODOO_USER=\${ODOO_USER}
      - ODOO_PASSWORD=\${ODOO_PASSWORD}
      - CREATE_CUSTOMER_IF_NOT_EXIST=\${CREATE_CUSTOMER_IF_NOT_EXIST}
      - ODOO_CUSTOMER_EXTERNAL_ID=\${ODOO_CUSTOMER_EXTERNAL_ID}
      - ODOO_CUSTOMER_DOB_FIELD=\${ODOO_CUSTOMER_DOB_FIELD}
      - ODOO_CUSTOMER_WEIGHT_FIELD=\${ODOO_CUSTOMER_WEIGHT_FIELD}
      - EMR_WEIGHT_CONCEPT=\${EMR_WEIGHT_CONCEPT}
      - OPENMRS_IDENTIFIER_TYPE_UUID=\${OPENMRS_IDENTIFIER_TYPE_UUID}
      - ODOO_ENABLE_EXTRA_CUSTOMER_FIELDS_ROUTE=\${ODOO_ENABLE_EXTRA_CUSTOMER_FIELDS_ROUTE}
      - ODOO_ENABLE_EXTRA_QUOTATION_FIELDS_ROUTE=\${ODOO_ENABLE_EXTRA_QUOTATION_FIELDS_ROUTE}
      - ODOO_URL=http://odoo:8069
      - OPENMRS_URL=http://openmrs:8080/openmrs
      - EIP_PROFILE=prod
      - EIP_WATCHED_TABLES=patient,person_name,person_address,patient_identifier,orders,test_order,drug_order
      - MYSQL_ADMIN_USER=root
      - MYSQL_ADMIN_USER_PASSWORD=\${MYSQL_ROOT_PASSWORD}
      - OPENMRS_DB_HOST=\${OPENMRS_DB_HOST}
      - OPENMRS_DB_PORT=\${OPENMRS_DB_PORT}
      - OPENMRS_DB_NAME=\${OPENMRS_DB_NAME}
      - OPENMRS_DB_USER=\${OPENMRS_DB_USER}
      - OPENMRS_DB_PASSWORD=\${OPENMRS_DB_PASSWORD}
      - OPENMRS_USER=\${OPENMRS_USER}
      - OPENMRS_PASSWORD=\${OPENMRS_PASSWORD}
      - EIP_FHIR_RESOURCES=Patient,ServiceRequest,MedicationRequest
      - EIP_FHIR_SERVER_URL=http://openmrs:8080/openmrs/ws/fhir2/R4
      - EIP_FHIR_USERNAME=\${OPENMRS_USER}
      - EIP_FHIR_PASSWORD=\${OPENMRS_PASSWORD}
    image: mekomsolutions/mekomsolutions/${dockerreponame}-eip-client
    networks:
      ozone:
        aliases:
          - eip-client-odoo
          - eip-odoo-openmrs
    restart: unless-stopped
    volumes:
      - "\${EIP_ODOO_OPENMRS_ROUTES_PATH}:/eip-client/routes"
      - eip-home-odoo:/eip-home
  # OpenMRS 3 Backend
  openmrs:
    depends_on:
      mysql:
        condition: service_started
      env-substitution:
        condition: service_completed_successfully
    environment:
      OMRS_CONFIG_MODULE_WEB_ADMIN: "true"
      OMRS_CONFIG_AUTO_UPDATE_DATABASE: "true"
      OMRS_CONFIG_CREATE_TABLES: "true"
      OMRS_CONFIG_CONNECTION_SERVER: mysql
      OMRS_CONFIG_CONNECTION_DATABASE: openmrs
      OMRS_CONFIG_CONNECTION_USERNAME: \${OPENMRS_DB_USER:-openmrs}
      OMRS_CONFIG_CONNECTION_PASSWORD: \${OPENMRS_DB_PASSWORD:-openmrs}
      HOST_URL: https://\${O3_HOSTNAME}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/openmrs/health/started" ]
      interval: 10s
      timeout: 5s
      retries: 48
      start_period: 120s
    image: mekomsolutions/${dockerreponame}-O3-backend:\${O3_DOCKER_IMAGE_TAG:-nightly}
    labels:
      traefik.enable: "true"
      traefik.http.routers.openmrs.rule: "Host(`\${O3_HOSTNAME}`) && PathPrefix(`/openmrs`)"
      traefik.http.routers.openmrs.entrypoints: "websecure"
      traefik.http.services.openmrs.loadbalancer.server.port: 8080
      traefik.http.routers.openmrs.middlewares: openmrs-spa-redirectregex
      traefik.http.middlewares.openmrs-spa-redirectregex.redirectregex.regex: https://\${O3_HOSTNAME}/openmrs/spa
      traefik.http.middlewares.openmrs-spa-redirectregex.redirectregex.replacement: https://\${O3_HOSTNAME}/openmrs/spa/home
    networks:
      - ozone
      - web
    restart: unless-stopped
    volumes:
      - "openmrs-data:/openmrs/data"
      - "\${OPENMRS_OWAS_PATH:-openmrs-owas}:/openmrs/distribution/openmrs_owas/"
      - "\${OPENMRS_CORE_PATH:-openmrs-core}:/openmrs/distribution/openmrs_core/"
      - "\${OPENMRS_MODULES_PATH:-openmrs-modules}:/openmrs/distribution/openmrs_modules/"
      - "\${OPENMRS_CONFIG_PATH:-openmrs-config}:/openmrs/distribution/openmrs_config/"
      - "\${OPENMRS_CONFIG_CHECKSUMS_PATH:-openmrs-config-checksums}:/openmrs/data/configuration_checksums"
      - "\${OPENMRS_PROPERTIES_PATH}:/etc/properties/"

  # OpenMRS 3 Frontend
  frontend:
    environment:
      SPA_PATH: /openmrs/spa
      API_URL: /openmrs
      SPA_CONFIG_URLS: \${SPA_CONFIG_URLS}
      SPA_DEFAULT_LOCALE: \${SPA_DEFAULT_LOCALE}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      timeout: 5s
    image: mekomsolutions/${dockerreponame}-O3-frontend:\${O3_DOCKER_IMAGE_TAG:-nightly}
    labels:
      traefik.enable: "true"
      traefik.http.routers.frontend.rule: "Host(`\${O3_HOSTNAME}`) && PathPrefix(`/openmrs/spa/`)"
      traefik.http.routers.frontend.entrypoints: "websecure"
      traefik.http.routers.frontend.middlewares: frontend-stripprefix,gzip
      traefik.http.services.frontend.loadbalancer.server.port: 80

      traefik.http.routers.home.rule: "Host(`\${O3_HOSTNAME}`) && PathPrefix(`/home`)"
      traefik.http.routers.home.entrypoints: "websecure"
      traefik.http.routers.home.middlewares: home-redirectregex

      traefik.http.routers.root.rule: "Host(`\${O3_HOSTNAME}`) && PathPrefix(`/`)"  
      traefik.http.routers.root.entrypoints: "websecure"
      traefik.http.routers.root.middlewares: root-redirectregex

      traefik.http.middlewares.frontend-stripprefix.stripprefix.prefixes: /openmrs/spa
      traefik.http.middlewares.frontend-stripprefix.stripprefix.forceslash: false
      traefik.http.middlewares.home-redirectregex.redirectregex.regex: https://\${O3_HOSTNAME}/home
      traefik.http.middlewares.home-redirectregex.redirectregex.replacement: https://\${O3_HOSTNAME}/openmrs/spa/home
      traefik.http.middlewares.root-redirectregex.redirectregex.regex: https://\${O3_HOSTNAME}
      traefik.http.middlewares.root-redirectregex.redirectregex.replacement: https://\${O3_HOSTNAME}/openmrs/spa/home
      traefik.http.middlewares.gzip.compress: true
    networks:
      - ozone
      - web
    restart: unless-stopped
    volumes:
      - "\${OPENMRS_FRONTEND_BINARY_PATH}:/usr/share/nginx/html"
      - "\${OPENMRS_FRONTEND_CONFIG_PATH}:/usr/share/nginx/html/ozone"
  # SENAITE
  senaite:
    depends_on: 
      env-substitution:
        condition: service_completed_successfully
    environment: 
      - SITE=\${SITE}
      - ADMIN_USER=\${SENAITE_ADMIN_USER}
      - ADMIN_PASSWORD=\${SENAITE_ADMIN_PASSWORD}
    image: mekomsolutions/${dockerreponame}-senaite:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.senaite.loadbalancer.server.port=8080"
      - "traefik.http.routers.senaite.rule=Host(`\${SENAITE_HOSTNAME}`)"
      - "traefik.http.routers.senaite.middlewares=senaite"
      - "traefik.http.middlewares.senaite.addprefix.prefix=/VirtualHostBase/https/\${SENAITE_HOSTNAME}/senaite/VirtualHostRoot"
    networks:
      - ozone
      - web
    restart: unless-stopped
    volumes:
      - \${SENAITE_CONFIG_PATH}:/data/importdata/senaite
      - senaite-filestorage:/data/filestorage
      - senaite-blobstorage:/data/blobstorage

  # OpenMRS - SENAITE integration service
  eip-openmrs-senaite:
    depends_on:
      env-substitution:
        condition: service_completed_successfully
      openmrs:
        condition: service_healthy
      mysql:
        condition: service_started
      senaite:
        condition: service_started
    environment:
      - SENAITE_SERVER_URL=http://senaite:8080/senaite
      - SENAITE_SERVER_USER=\${SENAITE_ADMIN_USER}
      - SENAITE_SERVER_PASSWORD=\${SENAITE_ADMIN_PASSWORD}
      - OPENMRS_SERVER_URL=http://openmrs:8080/openmrs
      - OPENMRS_SERVER_USER=\${OPENMRS_USER}
      - OPENMRS_SERVER_PASSWORD=\${OPENMRS_PASSWORD}
      - OPENMRS_RESULTS_ENCOUNTER_TYPE_UUID=\${RESULTS_ENCOUNTER_TYPE_UUID}
      - OPENMRS_IDENTIFIER_TYPE_UUID=\${OPENMRS_IDENTIFIER_TYPE_UUID}
      - OPENMRS_CONCEPT_COMPLEX_UUID=\${CONCEPT_COMPLEX_UUID}
      - BAHMNI_TEST_ORDER_TYPE_UUID=\${BAHMNI_TEST_ORDER_TYPE_UUID}
      - EIP_PROFILE=prod
      - EIP_WATCHED_TABLES=patient,person_name,person_address,patient_identifier,orders,test_order
      - EIP_DB_NAME_SENAITE=\${EIP_DB_NAME_SENAITE}
      - EIP_DB_USER_SENAITE=\${EIP_DB_USER_SENAITE}
      - EIP_DB_PASSWORD_SENAITE=\${EIP_DB_PASSWORD_SENAITE}
      - DB_EVENT_DESTINATIONS_SENAITE=\${DB_EVENT_DESTINATIONS_SENAITE}
      - MYSQL_ADMIN_USER=root
      - MYSQL_ADMIN_USER_PASSWORD=\${MYSQL_ROOT_PASSWORD}
      - OPENMRS_DB_HOST=\${OPENMRS_DB_HOST}
      - OPENMRS_DB_PORT=\${OPENMRS_DB_PORT}
      - OPENMRS_DB_NAME=\${OPENMRS_DB_NAME}
      - OPENMRS_DB_USER=\${OPENMRS_DB_USER}
      - OPENMRS_DB_PASSWORD=\${OPENMRS_DB_PASSWORD}
      - OPENMRS_USER=\${OPENMRS_USER}
      - OPENMRS_PASSWORD=\${OPENMRS_PASSWORD}
    image: mekomsolutions/${dockerreponame}-eip-client
    networks:
      ozone:
        aliases:
          - eip-client-senaite
    restart: unless-stopped
    volumes:
      - "\${EIP_OPENMRS_SENAITE_ROUTES_PATH}:/eip-client/routes"
      - eip-home-senaite:/eip-home
version: "3.7"

volumes:
  mysql-data: ~
  postgresql-data: ~
  erpnext-redis-queue-data: ~
  erpnext-redis-cache-data: ~
  erpnext-sites: ~
  erpnext-logs: ~
  eip-home-erpnext: ~
  eip-home-odoo: ~
  odoo-checksums: ~
  odoo-config: ~
  odoo-extra-addons: ~
  odoo-filestore: ~
  odoo-web-data: ~
  openmrs-core: ~
  openmrs-config: ~
  openmrs-config-checksums: ~
  openmrs-data: ~
  openmrs-modules: ~
  openmrs-owas: ~
  eip-home-senaite: ~
  senaite-blobstorage: ~
  senaite-filestorage: ~
  